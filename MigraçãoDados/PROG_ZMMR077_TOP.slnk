<?xml version="1.0" encoding="utf-8"?>
<PROG NAME="ZMMR077_TOP" VARCL="X" SUBC="I" APPL="Z" RSTAT="K" RMAND="300" RLOAD="E" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="Include ZMMR077_TOP" LENGTH="19 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include           ZMMR077_TOP
*&amp;---------------------------------------------------------------------*

REPORT   zmmr077 MESSAGE-ID zmm.

*----------------------------------------------------------------------*
* TYPES
*----------------------------------------------------------------------*
TYPE-POOLS abap.

INCLUDE zmmr077_d01. &quot;Classes definitions

*----------------------------------------------------------------------*
* SCREEN SELECTION
*----------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-003.
PARAMETERS  p_tabl  TYPE tabname16 MATCHCODE OBJECT dd_dbtb_16.
SELECTION-SCREEN END OF BLOCK b1.
SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-001.
PARAMETERS  p_file  TYPE string LOWER CASE.
SELECTION-SCREEN COMMENT  /1(79) text-002.
SELECTION-SCREEN END OF BLOCK b2.
SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE text-004.
PARAMETERS: r_oprd  RADIOBUTTON GROUP opr DEFAULT &apos;X&apos; USER-COMMAND mop,
            r_opru  RADIOBUTTON GROUP opr.
SELECTION-SCREEN BEGIN OF BLOCK b4 WITH FRAME TITLE text-005.
PARAMETERS: r_lcal  RADIOBUTTON GROUP mda DEFAULT &apos;X&apos; MODIF ID mop,
            r_serv  RADIOBUTTON GROUP mda MODIF ID mop.
SELECTION-SCREEN END OF BLOCK b4.
SELECTION-SCREEN END OF BLOCK b3.

*--------------------------------------------------------------------*
* GLOBAL ATOMIC VARIABLES
*--------------------------------------------------------------------*
DATA: r_desktop TYPE REF TO lcl_desktop,
      r_server  TYPE REF TO lcl_server,
      r_report  TYPE REF TO lcl_report,
      r_error   TYPE REF TO cx_bapi_error.
*--------------------------------------------------------------------*
* FIELD-SYMBOLS
*--------------------------------------------------------------------*
FIELD-SYMBOLS &lt;s_return&gt; TYPE bapiret2.

*--------------------------------------------------------------------*
* MACROS
*--------------------------------------------------------------------*
DEFINE m_raise_fm_exception.
  message id &amp;1
          type &amp;2
          number &amp;3
          with &amp;4 &amp;5 &amp;6 &amp;7
          into l_message.

  append initial line to lt_return assigning &lt;ls_return&gt;.
  &lt;ls_return&gt;-id         = sy-msgid.
  &lt;ls_return&gt;-type       = sy-msgty.
  &lt;ls_return&gt;-number     = sy-msgno.
  &lt;ls_return&gt;-message    = l_message.
  &lt;ls_return&gt;-message_v1 = sy-msgv1.
  &lt;ls_return&gt;-message_v2 = sy-msgv2.
  &lt;ls_return&gt;-message_v3 = sy-msgv3.
  &lt;ls_return&gt;-message_v4 = sy-msgv4.

  raise exception type cx_bapi_error
   exporting
     status = lt_return.
END-OF-DEFINITION.
DEFINE m_show_first_msg.
  read table lx_error-&gt;status with key type = &apos;E&apos; assigning field-symbol(&lt;ls_return&gt;).
  if sy-subrc = 0.
    message id     &lt;ls_return&gt;-id
            type   &lt;ls_return&gt;-type
            number &lt;ls_return&gt;-number
            with   &lt;ls_return&gt;-message_v1
                   &lt;ls_return&gt;-message_v2
                   &lt;ls_return&gt;-message_v3
                   &lt;ls_return&gt;-message_v4.
  else.
    raise exception lx_error.
  endif.
END-OF-DEFINITION.
DEFINE m_fill_msg.
  ls_msg-msgty     = &amp;1.
  ls_msg-msgid     = &amp;2.
  ls_msg-msgno     = &amp;3.
  ls_msg-msgv1     = &amp;4.
  ls_msg-msgv2     = &amp;5.
  ls_msg-msgv3     = &amp;6.
  ls_msg-msgv4     = &amp;7.
  ls_msg-detlevel  = &amp;8.
END-OF-DEFINITION.
DEFINE m_raise_message.
  read table lx_error-&gt;status with key type = &apos;E&apos;
   assigning &lt;ls_return&gt;.
  if sy-subrc = 0.
    message
         id &lt;ls_return&gt;-id
       type &lt;ls_return&gt;-type
     number &lt;ls_return&gt;-number
       with &lt;ls_return&gt;-message_v1 &lt;lw_return&gt;-message_v2
            &lt;ls_return&gt;-message_v3 &lt;lw_return&gt;-message_v4.
  endif.
END-OF-DEFINITION.
DEFINE m_get_file_content.
  lr_iterator ?= me-&gt;mr_file-&gt;get_iterator( ).
  while lr_iterator-&gt;hasnext( ) = abap_true.
    lr_fline ?= lr_iterator-&gt;next( ).
    append lr_fline-&gt;ms_line to lt_filecontent.
  endwhile.
END-OF-DEFINITION.
DEFINE m_assign2header.
  ls_header-&amp;1  = &lt;ls_output&gt;-&amp;2.
  ls_headerx-&amp;1 = abap_true.
END-OF-DEFINITION.
DEFINE m_assign2item.
  &lt;ls_item&gt;-&amp;1 = &lt;ls_output&gt;-&amp;2.
  &lt;ls_itemx&gt;-&amp;1 = abap_true.
END-OF-DEFINITION.
DEFINE m_assign2account.
  &lt;ls_account&gt;-&amp;1  = &lt;ls_output&gt;-&amp;2.
  &lt;ls_accountx&gt;-&amp;1 = abap_true.
END-OF-DEFINITION.</source>
</PROG>
